name: build
on:
  workflow_dispatch:
    inputs:
      packageName:
        description: 'The actual name of the package you want to build'
        required: true
        
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup

    steps:
    - name: Prepare environment
      run:  |
             yes $'\n'|pacman -Syu base-devel unzip p7zip busybox rclone git
             # unlock the limitation of makepkg
             sed -i '/E_ROOT/d' /usr/bin/makepkg
             # deal with signatures
             echo 'PACKAGER="Alexhhh-bot <alex-hhh@qq.com>"' >> /etc/makepkg.conf
             echo '${{secrets.GPG_PRIVATE_KEY}}' >> private-file.key
             gpg --import private-file.key
             rm -r private-file.key
             gpg -a --export 7737C174A7899F3D870D1EC8C45BE3817C9F5E15 | pacman-key --add -
             pacman-key --lsign C45BE3817C9F5E15

    - name: Prepare rclone
      run:  |
             mkdir -p ~/.config/rclone/
             touch ~/.config/rclone/rclone.conf
             echo -e '${{secrets.ONEDRIVE_CONFIG}}' >> ~/.config/rclone/rclone.conf
             
    - name: PkgBuild
      run:  |
             buildPackage(){
               git clone https://aur.archlinux.org/$1.git
               cd ./$1
               source ./PKGBUILD
               Alldepends=(${depends[@]} ${makedepends[@]})
               local package
               for package in ${Alldepends[@]};do
                 if pacman -S ${package} --noconfirm --needed ;then
                   echo -e 'dependency ${package} satisfied'
                 else
                   cd ../
                   buildPackage ${package}
                   pacman -U ./${package}*.pkg.tar.zst --noconfirm
                   cd ./$1
                   echo -e 'dependency ${package} built from aur satisfied'
                 fi
               done
               makepkg -d -f --noconfirm --skippgpcheck --sign 7737C174A7899F3D870D1EC8C45BE3817C9F5E15
               cp *.pkg.tar.zst* ../
               cd ../
               rm -r ./$1
             }
             mkdir works && cd works
             buildPackage ${{ github.event.inputs.packageName }}
             
    - name: Upload package(s)
      run:  |
             cd works
             rclone copy ./ alexhhh:/Public/Repo/ --include "*.pkg.tar.zst*"
             echo $(ls *.pkg.tar.zst*) >> ${{ github.event.inputs.packageName }}.txt
             rclone move ./${{ github.event.inputs.packageName }}.txt alexhhh:/Public/Repo/logs/
             #fuck this up
             while [[ -n $(rclone ls alexhhh:/Public/Repo | grep "_lock") ]]
             do
               sleep 5
             done
             echo -e "${{ github.event.inputs.packageName }},$(date)" >> 114514lock
             rclone move ./114514lock alexhhh:/Public/Repo/
             rclone copy alexhhh:/Public/Repo/ ./ --include "*.db.tar.gz"
             rclone copy alexhhh:/Public/Repo/ ./ --include "*.files.tar.gz"
             repo-add ./alexhhhBot.db.tar.gz ./*.pkg.tar.zst
             #rclone has some problems with symlinks even with --copy-links
             rm -r alexhhhBot.db alexhhhBot.files
             cp alexhhhBot.db.tar.gz alexhhhBot.db
             cp alexhhhBot.files.tar.gz alexhhhBot.files
             rclone move ./ alexhhh:/Public/Repo  --include "*.db*"
             rclone move ./ alexhhh:/Public/Repo  --include "*.files*"
             rclone delete alexhhh:/Public/Repo/114514lock
